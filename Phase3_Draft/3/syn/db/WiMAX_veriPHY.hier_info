|wimax_top_wrapper
clk_ref => clk_ref.IN1
reset_N => reset_N.IN3
load => load.IN1
en => en.IN1
prbs_pass << prbs_pass.DB_MAX_OUTPUT_PORT_TYPE
fec_pass << fec_pass.DB_MAX_OUTPUT_PORT_TYPE
interleaver_pass << interleaver_pass.DB_MAX_OUTPUT_PORT_TYPE
modulator_pass << modulator_pass.DB_MAX_OUTPUT_PORT_TYPE


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0
clk_ref => clk_ref.IN1
reset_N => reset_N.IN4
data_in => data_in.IN1
load => load.IN1
en => en.IN1
valid_in => valid_in.IN1
ready_in => ready_in.IN1
ready_out <= prbs:randomizer_U0.ready_prbs
valid_out <= qpsk_MOD:qpsk_MOD_U3.valid_out
clk_50 <= clk_50.DB_MAX_OUTPUT_PORT_TYPE
clk_100 <= clk_100.DB_MAX_OUTPUT_PORT_TYPE
locked <= PLL_50_100:PLL_inst.locked
prbs_out <= data_out_to_fec.DB_MAX_OUTPUT_PORT_TYPE
prbs_valid <= valid_out_to_fec.DB_MAX_OUTPUT_PORT_TYPE
fec_out <= data_out_fec.DB_MAX_OUTPUT_PORT_TYPE
fec_valid <= valid_out_fec.DB_MAX_OUTPUT_PORT_TYPE
interleaver_out <= data_out_interleaver.DB_MAX_OUTPUT_PORT_TYPE
interleaver_valid <= valid_out_interleaver.DB_MAX_OUTPUT_PORT_TYPE
I_comp[0] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[1] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[2] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[3] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[4] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[5] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[6] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[7] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[8] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[9] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[10] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[11] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[12] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[13] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[14] <= qpsk_MOD:qpsk_MOD_U3.I_comp
I_comp[15] <= qpsk_MOD:qpsk_MOD_U3.I_comp
Q_comp[0] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[1] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[2] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[3] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[4] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[5] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[6] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[7] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[8] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[9] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[10] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[11] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[12] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[13] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[14] <= qpsk_MOD:qpsk_MOD_U3.Q_comp
Q_comp[15] <= qpsk_MOD:qpsk_MOD_U3.Q_comp


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|PLL_50_100:PLL_inst
refclk => refclk.IN1
rst => rst.IN1
outclk_0 <= PLL_50_100_0002:pll_50_100_inst.outclk_0
outclk_1 <= PLL_50_100_0002:pll_50_100_inst.outclk_1
locked <= PLL_50_100_0002:pll_50_100_inst.locked


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|PLL_50_100:PLL_inst|PLL_50_100_0002:pll_50_100_inst
refclk => refclk.IN1
rst => rst.IN1
outclk_0 <= altera_pll:altera_pll_i.outclk
outclk_1 <= altera_pll:altera_pll_i.outclk
locked <= altera_pll:altera_pll_i.locked


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|PLL_50_100:PLL_inst|PLL_50_100_0002:pll_50_100_inst|altera_pll:altera_pll_i
refclk => general[0].gpll.I_REFCLK
refclk => general[1].gpll.I_REFCLK
refclk1 => ~NO_FANOUT~
fbclk => ~NO_FANOUT~
rst => general[0].gpll.I_RST
rst => general[1].gpll.I_RST
phase_en => ~NO_FANOUT~
updn => ~NO_FANOUT~
num_phase_shifts[0] => ~NO_FANOUT~
num_phase_shifts[1] => ~NO_FANOUT~
num_phase_shifts[2] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
cntsel[0] => ~NO_FANOUT~
cntsel[1] => ~NO_FANOUT~
cntsel[2] => ~NO_FANOUT~
cntsel[3] => ~NO_FANOUT~
cntsel[4] => ~NO_FANOUT~
reconfig_to_pll[0] => ~NO_FANOUT~
reconfig_to_pll[1] => ~NO_FANOUT~
reconfig_to_pll[2] => ~NO_FANOUT~
reconfig_to_pll[3] => ~NO_FANOUT~
reconfig_to_pll[4] => ~NO_FANOUT~
reconfig_to_pll[5] => ~NO_FANOUT~
reconfig_to_pll[6] => ~NO_FANOUT~
reconfig_to_pll[7] => ~NO_FANOUT~
reconfig_to_pll[8] => ~NO_FANOUT~
reconfig_to_pll[9] => ~NO_FANOUT~
reconfig_to_pll[10] => ~NO_FANOUT~
reconfig_to_pll[11] => ~NO_FANOUT~
reconfig_to_pll[12] => ~NO_FANOUT~
reconfig_to_pll[13] => ~NO_FANOUT~
reconfig_to_pll[14] => ~NO_FANOUT~
reconfig_to_pll[15] => ~NO_FANOUT~
reconfig_to_pll[16] => ~NO_FANOUT~
reconfig_to_pll[17] => ~NO_FANOUT~
reconfig_to_pll[18] => ~NO_FANOUT~
reconfig_to_pll[19] => ~NO_FANOUT~
reconfig_to_pll[20] => ~NO_FANOUT~
reconfig_to_pll[21] => ~NO_FANOUT~
reconfig_to_pll[22] => ~NO_FANOUT~
reconfig_to_pll[23] => ~NO_FANOUT~
reconfig_to_pll[24] => ~NO_FANOUT~
reconfig_to_pll[25] => ~NO_FANOUT~
reconfig_to_pll[26] => ~NO_FANOUT~
reconfig_to_pll[27] => ~NO_FANOUT~
reconfig_to_pll[28] => ~NO_FANOUT~
reconfig_to_pll[29] => ~NO_FANOUT~
reconfig_to_pll[30] => ~NO_FANOUT~
reconfig_to_pll[31] => ~NO_FANOUT~
reconfig_to_pll[32] => ~NO_FANOUT~
reconfig_to_pll[33] => ~NO_FANOUT~
reconfig_to_pll[34] => ~NO_FANOUT~
reconfig_to_pll[35] => ~NO_FANOUT~
reconfig_to_pll[36] => ~NO_FANOUT~
reconfig_to_pll[37] => ~NO_FANOUT~
reconfig_to_pll[38] => ~NO_FANOUT~
reconfig_to_pll[39] => ~NO_FANOUT~
reconfig_to_pll[40] => ~NO_FANOUT~
reconfig_to_pll[41] => ~NO_FANOUT~
reconfig_to_pll[42] => ~NO_FANOUT~
reconfig_to_pll[43] => ~NO_FANOUT~
reconfig_to_pll[44] => ~NO_FANOUT~
reconfig_to_pll[45] => ~NO_FANOUT~
reconfig_to_pll[46] => ~NO_FANOUT~
reconfig_to_pll[47] => ~NO_FANOUT~
reconfig_to_pll[48] => ~NO_FANOUT~
reconfig_to_pll[49] => ~NO_FANOUT~
reconfig_to_pll[50] => ~NO_FANOUT~
reconfig_to_pll[51] => ~NO_FANOUT~
reconfig_to_pll[52] => ~NO_FANOUT~
reconfig_to_pll[53] => ~NO_FANOUT~
reconfig_to_pll[54] => ~NO_FANOUT~
reconfig_to_pll[55] => ~NO_FANOUT~
reconfig_to_pll[56] => ~NO_FANOUT~
reconfig_to_pll[57] => ~NO_FANOUT~
reconfig_to_pll[58] => ~NO_FANOUT~
reconfig_to_pll[59] => ~NO_FANOUT~
reconfig_to_pll[60] => ~NO_FANOUT~
reconfig_to_pll[61] => ~NO_FANOUT~
reconfig_to_pll[62] => ~NO_FANOUT~
reconfig_to_pll[63] => ~NO_FANOUT~
extswitch => ~NO_FANOUT~
adjpllin => ~NO_FANOUT~
cclk => ~NO_FANOUT~
outclk[0] <= general[0].gpll.O_OUTCLK
outclk[1] <= general[1].gpll.O_OUTCLK
fboutclk <= general[0].gpll.O_FBOUTCLK
locked <= general[0].gpll.LOCKED
phase_done <= <GND>
reconfig_from_pll[0] <= <GND>
reconfig_from_pll[1] <= <GND>
reconfig_from_pll[2] <= <GND>
reconfig_from_pll[3] <= <GND>
reconfig_from_pll[4] <= <GND>
reconfig_from_pll[5] <= <GND>
reconfig_from_pll[6] <= <GND>
reconfig_from_pll[7] <= <GND>
reconfig_from_pll[8] <= <GND>
reconfig_from_pll[9] <= <GND>
reconfig_from_pll[10] <= <GND>
reconfig_from_pll[11] <= <GND>
reconfig_from_pll[12] <= <GND>
reconfig_from_pll[13] <= <GND>
reconfig_from_pll[14] <= <GND>
reconfig_from_pll[15] <= <GND>
reconfig_from_pll[16] <= <GND>
reconfig_from_pll[17] <= <GND>
reconfig_from_pll[18] <= <GND>
reconfig_from_pll[19] <= <GND>
reconfig_from_pll[20] <= <GND>
reconfig_from_pll[21] <= <GND>
reconfig_from_pll[22] <= <GND>
reconfig_from_pll[23] <= <GND>
reconfig_from_pll[24] <= <GND>
reconfig_from_pll[25] <= <GND>
reconfig_from_pll[26] <= <GND>
reconfig_from_pll[27] <= <GND>
reconfig_from_pll[28] <= <GND>
reconfig_from_pll[29] <= <GND>
reconfig_from_pll[30] <= <GND>
reconfig_from_pll[31] <= <GND>
reconfig_from_pll[32] <= <GND>
reconfig_from_pll[33] <= <GND>
reconfig_from_pll[34] <= <GND>
reconfig_from_pll[35] <= <GND>
reconfig_from_pll[36] <= <GND>
reconfig_from_pll[37] <= <GND>
reconfig_from_pll[38] <= <GND>
reconfig_from_pll[39] <= <GND>
reconfig_from_pll[40] <= <GND>
reconfig_from_pll[41] <= <GND>
reconfig_from_pll[42] <= <GND>
reconfig_from_pll[43] <= <GND>
reconfig_from_pll[44] <= <GND>
reconfig_from_pll[45] <= <GND>
reconfig_from_pll[46] <= <GND>
reconfig_from_pll[47] <= <GND>
reconfig_from_pll[48] <= <GND>
reconfig_from_pll[49] <= <GND>
reconfig_from_pll[50] <= <GND>
reconfig_from_pll[51] <= <GND>
reconfig_from_pll[52] <= <GND>
reconfig_from_pll[53] <= <GND>
reconfig_from_pll[54] <= <GND>
reconfig_from_pll[55] <= <GND>
reconfig_from_pll[56] <= <GND>
reconfig_from_pll[57] <= <GND>
reconfig_from_pll[58] <= <GND>
reconfig_from_pll[59] <= <GND>
reconfig_from_pll[60] <= <GND>
reconfig_from_pll[61] <= <GND>
reconfig_from_pll[62] <= <GND>
reconfig_from_pll[63] <= <GND>
activeclk <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
phout[0] <= <GND>
phout[1] <= <GND>
phout[2] <= <GND>
phout[3] <= <GND>
phout[4] <= <GND>
phout[5] <= <GND>
phout[6] <= <GND>
phout[7] <= <GND>
lvds_clk[0] <= <GND>
lvds_clk[1] <= <GND>
loaden[0] <= <GND>
loaden[1] <= <GND>
extclk_out[0] <= <GND>
extclk_out[1] <= <GND>
cascade_out[0] <= <GND>
cascade_out[1] <= <GND>
zdbfbclk <> <GND>


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|prbs:randomizer_U0
data_in => data_out.IN1
clk => data_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => valid_out~reg0.CLK
clk => ready_prbs~reg0.CLK
clk => r_reg[15].CLK
clk => r_reg[14].CLK
clk => r_reg[13].CLK
clk => r_reg[12].CLK
clk => r_reg[11].CLK
clk => r_reg[10].CLK
clk => r_reg[9].CLK
clk => r_reg[8].CLK
clk => r_reg[7].CLK
clk => r_reg[6].CLK
clk => r_reg[5].CLK
clk => r_reg[4].CLK
clk => r_reg[3].CLK
clk => r_reg[2].CLK
clk => r_reg[1].CLK
reset_N => data_out~reg0.ACLR
reset_N => counter[0].ACLR
reset_N => counter[1].ACLR
reset_N => counter[2].ACLR
reset_N => counter[3].ACLR
reset_N => counter[4].ACLR
reset_N => counter[5].ACLR
reset_N => counter[6].ACLR
reset_N => valid_out~reg0.ACLR
reset_N => ready_prbs~reg0.ACLR
reset_N => r_reg[15].ACLR
reset_N => r_reg[14].ACLR
reset_N => r_reg[13].ACLR
reset_N => r_reg[12].ACLR
reset_N => r_reg[11].ACLR
reset_N => r_reg[10].ACLR
reset_N => r_reg[9].ACLR
reset_N => r_reg[8].ACLR
reset_N => r_reg[7].ACLR
reset_N => r_reg[6].ACLR
reset_N => r_reg[5].ACLR
reset_N => r_reg[4].ACLR
reset_N => r_reg[3].ACLR
reset_N => r_reg[2].ACLR
reset_N => r_reg[1].ACLR
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => r_reg.OUTPUTSELECT
load => ready_prbs.OUTPUTSELECT
load => valid_out.OUTPUTSELECT
load => data_out~reg0.ENA
load => counter[6].ENA
load => counter[5].ENA
load => counter[4].ENA
load => counter[3].ENA
load => counter[2].ENA
load => counter[1].ENA
load => counter[0].ENA
en => always0.IN0
ready_fec => ~NO_FANOUT~
valid_in => always0.IN1
valid_out <= valid_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
ready_prbs <= ready_prbs~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|fec_encoder_wimax_phy:fec_encoder_U1
clk_50 => clock.IN1
clk_100 => output_state~1.DATAIN
reset_N => Ping_Pong_flag.ACLR
reset_N => tail_flag_done.ACLR
reset_N => counter_output[0].ACLR
reset_N => counter_output[1].ACLR
reset_N => counter_output[2].ACLR
reset_N => counter_output[3].ACLR
reset_N => counter_output[4].ACLR
reset_N => counter_output[5].ACLR
reset_N => counter_output[6].ACLR
reset_N => counter_output[7].ACLR
reset_N => counter_output[8].ACLR
reset_N => counter_output[9].ACLR
reset_N => counter_output[10].ACLR
reset_N => counter_output[11].ACLR
reset_N => counter_output[12].ACLR
reset_N => counter_output[13].ACLR
reset_N => counter_output[14].ACLR
reset_N => counter_output[15].ACLR
reset_N => counter_output[16].ACLR
reset_N => counter_output[17].ACLR
reset_N => counter_output[18].ACLR
reset_N => counter_output[19].ACLR
reset_N => counter_output[20].ACLR
reset_N => counter_output[21].ACLR
reset_N => counter_output[22].ACLR
reset_N => counter_output[23].ACLR
reset_N => counter_output[24].ACLR
reset_N => counter_output[25].ACLR
reset_N => counter_output[26].ACLR
reset_N => counter_output[27].ACLR
reset_N => counter_output[28].ACLR
reset_N => counter_output[29].ACLR
reset_N => counter_output[30].ACLR
reset_N => counter_output[31].ACLR
reset_N => shift_register2[0].ACLR
reset_N => shift_register2[1].ACLR
reset_N => shift_register2[2].ACLR
reset_N => shift_register2[3].ACLR
reset_N => shift_register2[4].ACLR
reset_N => shift_register2[5].ACLR
reset_N => shift_register[0].ACLR
reset_N => shift_register[1].ACLR
reset_N => shift_register[2].ACLR
reset_N => shift_register[3].ACLR
reset_N => shift_register[4].ACLR
reset_N => shift_register[5].ACLR
reset_N => counter_input[0].ACLR
reset_N => counter_input[1].ACLR
reset_N => counter_input[2].ACLR
reset_N => counter_input[3].ACLR
reset_N => counter_input[4].ACLR
reset_N => counter_input[5].ACLR
reset_N => counter_input[6].ACLR
reset_N => counter_input[7].ACLR
reset_N => counter_input[8].ACLR
reset_N => counter_input[9].ACLR
reset_N => counter_input[10].ACLR
reset_N => counter_input[11].ACLR
reset_N => counter_input[12].ACLR
reset_N => counter_input[13].ACLR
reset_N => counter_input[14].ACLR
reset_N => counter_input[15].ACLR
reset_N => counter_input[16].ACLR
reset_N => counter_input[17].ACLR
reset_N => counter_input[18].ACLR
reset_N => counter_input[19].ACLR
reset_N => counter_input[20].ACLR
reset_N => counter_input[21].ACLR
reset_N => counter_input[22].ACLR
reset_N => counter_input[23].ACLR
reset_N => counter_input[24].ACLR
reset_N => counter_input[25].ACLR
reset_N => counter_input[26].ACLR
reset_N => counter_input[27].ACLR
reset_N => counter_input[28].ACLR
reset_N => counter_input[29].ACLR
reset_N => counter_input[30].ACLR
reset_N => counter_input[31].ACLR
reset_N => output_state~3.DATAIN
reset_N => input_state~4.DATAIN
randomizer_output_valid => wren_a.IN1
ready_in => input_state.OUTPUTSELECT
ready_in => input_state.OUTPUTSELECT
ready_in => input_state.OUTPUTSELECT
ready_in => counter_input.OUTPUTSELECT
ready_in => counter_input.OUTPUTSELECT
ready_in => counter_input.OUTPUTSELECT
ready_in => counter_input.OUTPUTSELECT
ready_in => counter_input.OUTPUTSELECT
ready_in => counter_output.OUTPUTSELECT
ready_in => counter_output.OUTPUTSELECT
ready_in => counter_output.OUTPUTSELECT
ready_in => counter_output.OUTPUTSELECT
ready_in => counter_output.OUTPUTSELECT
ready_in => counter_output.OUTPUTSELECT
ready_in => counter_output.OUTPUTSELECT
ready_in => counter_output.OUTPUTSELECT
ready_in => counter_input[31].ENA
ready_in => counter_input[30].ENA
ready_in => counter_input[29].ENA
ready_in => counter_input[28].ENA
ready_in => counter_input[27].ENA
ready_in => counter_input[26].ENA
ready_in => counter_input[25].ENA
ready_in => counter_input[24].ENA
ready_in => counter_input[23].ENA
ready_in => counter_input[22].ENA
ready_in => counter_input[21].ENA
ready_in => counter_input[20].ENA
ready_in => counter_input[19].ENA
ready_in => counter_input[18].ENA
ready_in => counter_input[17].ENA
ready_in => counter_input[16].ENA
ready_in => counter_input[15].ENA
ready_in => counter_input[14].ENA
ready_in => counter_input[13].ENA
ready_in => counter_input[12].ENA
ready_in => counter_input[11].ENA
ready_in => counter_input[10].ENA
ready_in => counter_input[9].ENA
ready_in => counter_input[8].ENA
ready_in => counter_input[7].ENA
ready_in => counter_input[6].ENA
ready_in => counter_input[5].ENA
ready_in => shift_register[5].ENA
ready_in => shift_register[4].ENA
ready_in => shift_register[3].ENA
ready_in => shift_register[2].ENA
ready_in => shift_register[1].ENA
ready_in => shift_register[0].ENA
ready_in => shift_register2[5].ENA
ready_in => shift_register2[4].ENA
ready_in => shift_register2[3].ENA
ready_in => shift_register2[2].ENA
ready_in => shift_register2[1].ENA
ready_in => shift_register2[0].ENA
ready_in => counter_output[31].ENA
ready_in => counter_output[30].ENA
ready_in => counter_output[29].ENA
ready_in => counter_output[28].ENA
ready_in => counter_output[27].ENA
ready_in => counter_output[26].ENA
ready_in => counter_output[25].ENA
ready_in => counter_output[24].ENA
ready_in => counter_output[23].ENA
ready_in => counter_output[22].ENA
ready_in => counter_output[21].ENA
ready_in => counter_output[20].ENA
ready_in => counter_output[19].ENA
ready_in => counter_output[18].ENA
ready_in => counter_output[17].ENA
ready_in => counter_output[16].ENA
ready_in => counter_output[15].ENA
ready_in => counter_output[14].ENA
ready_in => counter_output[13].ENA
ready_in => counter_output[12].ENA
ready_in => counter_output[11].ENA
ready_in => counter_output[10].ENA
ready_in => counter_output[9].ENA
ready_in => counter_output[8].ENA
ready_in => tail_flag_done.ENA
ready_in => Ping_Pong_flag.ENA
data_in => data_a[0].IN1
valid_out <= valid_out.DB_MAX_OUTPUT_PORT_TYPE
data_out <= data_out.DB_MAX_OUTPUT_PORT_TYPE
ready_out <= ready_out.DB_MAX_OUTPUT_PORT_TYPE


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|fec_encoder_wimax_phy:fec_encoder_U1|FEC_DPR:fec_encoder_DPR
address_a[0] => address_a[0].IN1
address_a[1] => address_a[1].IN1
address_a[2] => address_a[2].IN1
address_a[3] => address_a[3].IN1
address_a[4] => address_a[4].IN1
address_a[5] => address_a[5].IN1
address_a[6] => address_a[6].IN1
address_a[7] => address_a[7].IN1
address_b[0] => address_b[0].IN1
address_b[1] => address_b[1].IN1
address_b[2] => address_b[2].IN1
address_b[3] => address_b[3].IN1
address_b[4] => address_b[4].IN1
address_b[5] => address_b[5].IN1
address_b[6] => address_b[6].IN1
address_b[7] => address_b[7].IN1
clock => clock.IN1
data_a[0] => data_a[0].IN1
data_b[0] => data_b[0].IN1
wren_a => wren_a.IN1
wren_b => wren_b.IN1
q_a[0] <= altsyncram:altsyncram_component.q_a
q_b[0] <= altsyncram:altsyncram_component.q_b


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|fec_encoder_wimax_phy:fec_encoder_U1|FEC_DPR:fec_encoder_DPR|altsyncram:altsyncram_component
wren_a => altsyncram_6in2:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => altsyncram_6in2:auto_generated.wren_b
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_6in2:auto_generated.data_a[0]
data_b[0] => altsyncram_6in2:auto_generated.data_b[0]
address_a[0] => altsyncram_6in2:auto_generated.address_a[0]
address_a[1] => altsyncram_6in2:auto_generated.address_a[1]
address_a[2] => altsyncram_6in2:auto_generated.address_a[2]
address_a[3] => altsyncram_6in2:auto_generated.address_a[3]
address_a[4] => altsyncram_6in2:auto_generated.address_a[4]
address_a[5] => altsyncram_6in2:auto_generated.address_a[5]
address_a[6] => altsyncram_6in2:auto_generated.address_a[6]
address_a[7] => altsyncram_6in2:auto_generated.address_a[7]
address_b[0] => altsyncram_6in2:auto_generated.address_b[0]
address_b[1] => altsyncram_6in2:auto_generated.address_b[1]
address_b[2] => altsyncram_6in2:auto_generated.address_b[2]
address_b[3] => altsyncram_6in2:auto_generated.address_b[3]
address_b[4] => altsyncram_6in2:auto_generated.address_b[4]
address_b[5] => altsyncram_6in2:auto_generated.address_b[5]
address_b[6] => altsyncram_6in2:auto_generated.address_b[6]
address_b[7] => altsyncram_6in2:auto_generated.address_b[7]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_6in2:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_6in2:auto_generated.q_a[0]
q_b[0] <= altsyncram_6in2:auto_generated.q_b[0]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|fec_encoder_wimax_phy:fec_encoder_U1|FEC_DPR:fec_encoder_DPR|altsyncram:altsyncram_component|altsyncram_6in2:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_b[0] => ram_block1a0.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
clock0 => ram_block1a0.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_b[0] => ram_block1a0.PORTBDATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_b[0] <= ram_block1a0.PORTBDATAOUT
wren_a => ram_block1a0.PORTAWE
wren_b => ram_block1a0.PORTBWE


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|interleaver_top:interleaver_U2
clk => clk.IN2
reset_N => reset_N.IN2
data_in => data_in.IN1
ready_in => ready_in.IN1
valid_in => valid_in.IN1
data_out <= PPBuffer:PingPongBuffer_inst.q
valid_out <= PPBuffer:PingPongBuffer_inst.valid_out
ready_out <= ready_out.DB_MAX_OUTPUT_PORT_TYPE


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|interleaver_top:interleaver_U2|interleaver:Interleaver_inst
clk => k[0].CLK
clk => k[1].CLK
clk => k[2].CLK
clk => k[3].CLK
clk => k[4].CLK
clk => k[5].CLK
clk => k[6].CLK
clk => k[7].CLK
resetN => k[0].ACLR
resetN => k[1].ACLR
resetN => k[2].ACLR
resetN => k[3].ACLR
resetN => k[4].ACLR
resetN => k[5].ACLR
resetN => k[6].ACLR
resetN => k[7].ACLR
ready_buffer => always2.IN0
valid_fec => always2.IN1
data_in => data_out.DATAIN
data_out <= data_in.DB_MAX_OUTPUT_PORT_TYPE
data_out_index[0] <= k[4].DB_MAX_OUTPUT_PORT_TYPE
data_out_index[1] <= k[5].DB_MAX_OUTPUT_PORT_TYPE
data_out_index[2] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
data_out_index[3] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
data_out_index[4] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
data_out_index[5] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
data_out_index[6] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
data_out_index[7] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
ready_interleaver <= <VCC>
valid_interleaver <= always2.DB_MAX_OUTPUT_PORT_TYPE


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|interleaver_top:interleaver_U2|PPBuffer:PingPongBuffer_inst
clk => clk.IN3
resetN => resetN.IN1
wraddress[0] => wraddress[0].IN2
wraddress[1] => wraddress[1].IN2
wraddress[2] => wraddress[2].IN2
wraddress[3] => wraddress[3].IN2
wraddress[4] => wraddress[4].IN2
wraddress[5] => wraddress[5].IN2
wraddress[6] => wraddress[6].IN2
wraddress[7] => wraddress[7].IN2
wrdata => wrdata.IN2
rdaddress[0] => rdaddress[0].IN2
rdaddress[1] => rdaddress[1].IN2
rdaddress[2] => rdaddress[2].IN2
rdaddress[3] => rdaddress[3].IN2
rdaddress[4] => rdaddress[4].IN2
rdaddress[5] => rdaddress[5].IN2
rdaddress[6] => rdaddress[6].IN2
rdaddress[7] => rdaddress[7].IN2
valid_in => valid_in.IN1
ready_in => ready_in.IN1
q <= PPBufferControl:BufferControl.q
valid_out <= PPBufferControl:BufferControl.valid_out
ready_out <= PPBufferControl:BufferControl.ready_out


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|interleaver_top:interleaver_U2|PPBuffer:PingPongBuffer_inst|PPBufferControl:BufferControl
clk => clear_counter.CLK
clk => valid_out~reg0.CLK
clk => bit_counter[0].CLK
clk => bit_counter[1].CLK
clk => bit_counter[2].CLK
clk => bit_counter[3].CLK
clk => bit_counter[4].CLK
clk => bit_counter[5].CLK
clk => bit_counter[6].CLK
clk => bit_counter[7].CLK
clk => state~1.DATAIN
resetN => state~3.DATAIN
wren_A <= wren_A.DB_MAX_OUTPUT_PORT_TYPE
rden_A <= rden_A.DB_MAX_OUTPUT_PORT_TYPE
q_A => q.DATAA
wren_B <= rden_A.DB_MAX_OUTPUT_PORT_TYPE
rden_B <= wren_A.DB_MAX_OUTPUT_PORT_TYPE
q_B => q.DATAB
valid_in => always1.IN1
valid_in => always1.IN0
ready_in => always1.IN1
ready_out <= Selector3.DB_MAX_OUTPUT_PORT_TYPE
valid_out <= valid_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|interleaver_top:interleaver_U2|PPBuffer:PingPongBuffer_inst|SDPR:BankA
clock => clock.IN1
data[0] => data[0].IN1
rdaddress[0] => rdaddress[0].IN1
rdaddress[1] => rdaddress[1].IN1
rdaddress[2] => rdaddress[2].IN1
rdaddress[3] => rdaddress[3].IN1
rdaddress[4] => rdaddress[4].IN1
rdaddress[5] => rdaddress[5].IN1
rdaddress[6] => rdaddress[6].IN1
rdaddress[7] => rdaddress[7].IN1
rden => rden.IN1
wraddress[0] => wraddress[0].IN1
wraddress[1] => wraddress[1].IN1
wraddress[2] => wraddress[2].IN1
wraddress[3] => wraddress[3].IN1
wraddress[4] => wraddress[4].IN1
wraddress[5] => wraddress[5].IN1
wraddress[6] => wraddress[6].IN1
wraddress[7] => wraddress[7].IN1
wren => wren.IN1
q[0] <= altsyncram:altsyncram_component.q_b


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|interleaver_top:interleaver_U2|PPBuffer:PingPongBuffer_inst|SDPR:BankA|altsyncram:altsyncram_component
wren_a => altsyncram_b432:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => altsyncram_b432:auto_generated.rden_b
data_a[0] => altsyncram_b432:auto_generated.data_a[0]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_b432:auto_generated.address_a[0]
address_a[1] => altsyncram_b432:auto_generated.address_a[1]
address_a[2] => altsyncram_b432:auto_generated.address_a[2]
address_a[3] => altsyncram_b432:auto_generated.address_a[3]
address_a[4] => altsyncram_b432:auto_generated.address_a[4]
address_a[5] => altsyncram_b432:auto_generated.address_a[5]
address_a[6] => altsyncram_b432:auto_generated.address_a[6]
address_a[7] => altsyncram_b432:auto_generated.address_a[7]
address_b[0] => altsyncram_b432:auto_generated.address_b[0]
address_b[1] => altsyncram_b432:auto_generated.address_b[1]
address_b[2] => altsyncram_b432:auto_generated.address_b[2]
address_b[3] => altsyncram_b432:auto_generated.address_b[3]
address_b[4] => altsyncram_b432:auto_generated.address_b[4]
address_b[5] => altsyncram_b432:auto_generated.address_b[5]
address_b[6] => altsyncram_b432:auto_generated.address_b[6]
address_b[7] => altsyncram_b432:auto_generated.address_b[7]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_b432:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_b[0] <= altsyncram_b432:auto_generated.q_b[0]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|interleaver_top:interleaver_U2|PPBuffer:PingPongBuffer_inst|SDPR:BankA|altsyncram:altsyncram_component|altsyncram_b432:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_b[0] => ram_block1a0.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a0.CLK1
data_a[0] => ram_block1a0.PORTADATAIN
q_b[0] <= ram_block1a0.PORTBDATAOUT
rden_b => ram_block1a0.ENA1
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a0.ENA0


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|interleaver_top:interleaver_U2|PPBuffer:PingPongBuffer_inst|SDPR:BankB
clock => clock.IN1
data[0] => data[0].IN1
rdaddress[0] => rdaddress[0].IN1
rdaddress[1] => rdaddress[1].IN1
rdaddress[2] => rdaddress[2].IN1
rdaddress[3] => rdaddress[3].IN1
rdaddress[4] => rdaddress[4].IN1
rdaddress[5] => rdaddress[5].IN1
rdaddress[6] => rdaddress[6].IN1
rdaddress[7] => rdaddress[7].IN1
rden => rden.IN1
wraddress[0] => wraddress[0].IN1
wraddress[1] => wraddress[1].IN1
wraddress[2] => wraddress[2].IN1
wraddress[3] => wraddress[3].IN1
wraddress[4] => wraddress[4].IN1
wraddress[5] => wraddress[5].IN1
wraddress[6] => wraddress[6].IN1
wraddress[7] => wraddress[7].IN1
wren => wren.IN1
q[0] <= altsyncram:altsyncram_component.q_b


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|interleaver_top:interleaver_U2|PPBuffer:PingPongBuffer_inst|SDPR:BankB|altsyncram:altsyncram_component
wren_a => altsyncram_b432:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => altsyncram_b432:auto_generated.rden_b
data_a[0] => altsyncram_b432:auto_generated.data_a[0]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_b432:auto_generated.address_a[0]
address_a[1] => altsyncram_b432:auto_generated.address_a[1]
address_a[2] => altsyncram_b432:auto_generated.address_a[2]
address_a[3] => altsyncram_b432:auto_generated.address_a[3]
address_a[4] => altsyncram_b432:auto_generated.address_a[4]
address_a[5] => altsyncram_b432:auto_generated.address_a[5]
address_a[6] => altsyncram_b432:auto_generated.address_a[6]
address_a[7] => altsyncram_b432:auto_generated.address_a[7]
address_b[0] => altsyncram_b432:auto_generated.address_b[0]
address_b[1] => altsyncram_b432:auto_generated.address_b[1]
address_b[2] => altsyncram_b432:auto_generated.address_b[2]
address_b[3] => altsyncram_b432:auto_generated.address_b[3]
address_b[4] => altsyncram_b432:auto_generated.address_b[4]
address_b[5] => altsyncram_b432:auto_generated.address_b[5]
address_b[6] => altsyncram_b432:auto_generated.address_b[6]
address_b[7] => altsyncram_b432:auto_generated.address_b[7]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_b432:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_b[0] <= altsyncram_b432:auto_generated.q_b[0]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|interleaver_top:interleaver_U2|PPBuffer:PingPongBuffer_inst|SDPR:BankB|altsyncram:altsyncram_component|altsyncram_b432:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_b[0] => ram_block1a0.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a0.CLK1
data_a[0] => ram_block1a0.PORTADATAIN
q_b[0] <= ram_block1a0.PORTBDATAOUT
rden_b => ram_block1a0.ENA1
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a0.ENA0


|wimax_top_wrapper|WiMAX_PHY_top:WiMAX_PHY_U0|qpsk_MOD:qpsk_MOD_U3
Reset_N => ready_out.IN0
Reset_N => valid_out~reg0.ACLR
Reset_N => Q_comp[0]~reg0.ACLR
Reset_N => Q_comp[1]~reg0.ACLR
Reset_N => Q_comp[2]~reg0.ACLR
Reset_N => Q_comp[3]~reg0.ACLR
Reset_N => Q_comp[4]~reg0.ACLR
Reset_N => Q_comp[5]~reg0.ACLR
Reset_N => Q_comp[6]~reg0.ACLR
Reset_N => Q_comp[7]~reg0.ACLR
Reset_N => Q_comp[8]~reg0.ACLR
Reset_N => Q_comp[9]~reg0.ACLR
Reset_N => Q_comp[10]~reg0.ACLR
Reset_N => Q_comp[11]~reg0.ACLR
Reset_N => Q_comp[12]~reg0.ACLR
Reset_N => Q_comp[13]~reg0.ACLR
Reset_N => Q_comp[14]~reg0.ACLR
Reset_N => Q_comp[15]~reg0.ACLR
Reset_N => I_comp[0]~reg0.ACLR
Reset_N => I_comp[1]~reg0.ACLR
Reset_N => I_comp[2]~reg0.ACLR
Reset_N => I_comp[3]~reg0.ACLR
Reset_N => I_comp[4]~reg0.ACLR
Reset_N => I_comp[5]~reg0.ACLR
Reset_N => I_comp[6]~reg0.ACLR
Reset_N => I_comp[7]~reg0.ACLR
Reset_N => I_comp[8]~reg0.ACLR
Reset_N => I_comp[9]~reg0.ACLR
Reset_N => I_comp[10]~reg0.ACLR
Reset_N => I_comp[11]~reg0.ACLR
Reset_N => I_comp[12]~reg0.ACLR
Reset_N => I_comp[13]~reg0.ACLR
Reset_N => I_comp[14]~reg0.ACLR
Reset_N => I_comp[15]~reg0.ACLR
Reset_N => b0.ACLR
Reset_N => bit_count.PRESET
clk_100 => valid_out~reg0.CLK
clk_100 => Q_comp[0]~reg0.CLK
clk_100 => Q_comp[1]~reg0.CLK
clk_100 => Q_comp[2]~reg0.CLK
clk_100 => Q_comp[3]~reg0.CLK
clk_100 => Q_comp[4]~reg0.CLK
clk_100 => Q_comp[5]~reg0.CLK
clk_100 => Q_comp[6]~reg0.CLK
clk_100 => Q_comp[7]~reg0.CLK
clk_100 => Q_comp[8]~reg0.CLK
clk_100 => Q_comp[9]~reg0.CLK
clk_100 => Q_comp[10]~reg0.CLK
clk_100 => Q_comp[11]~reg0.CLK
clk_100 => Q_comp[12]~reg0.CLK
clk_100 => Q_comp[13]~reg0.CLK
clk_100 => Q_comp[14]~reg0.CLK
clk_100 => Q_comp[15]~reg0.CLK
clk_100 => I_comp[0]~reg0.CLK
clk_100 => I_comp[1]~reg0.CLK
clk_100 => I_comp[2]~reg0.CLK
clk_100 => I_comp[3]~reg0.CLK
clk_100 => I_comp[4]~reg0.CLK
clk_100 => I_comp[5]~reg0.CLK
clk_100 => I_comp[6]~reg0.CLK
clk_100 => I_comp[7]~reg0.CLK
clk_100 => I_comp[8]~reg0.CLK
clk_100 => I_comp[9]~reg0.CLK
clk_100 => I_comp[10]~reg0.CLK
clk_100 => I_comp[11]~reg0.CLK
clk_100 => I_comp[12]~reg0.CLK
clk_100 => I_comp[13]~reg0.CLK
clk_100 => I_comp[14]~reg0.CLK
clk_100 => I_comp[15]~reg0.CLK
clk_100 => b0.CLK
clk_100 => bit_count.CLK
valid_in => always1.IN0
ready_in => always1.IN1
ready_in => ready_out.IN1
data_in => b0.DATAB
data_in => Decoder0.IN0
valid_out <= valid_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
ready_out <= ready_out.DB_MAX_OUTPUT_PORT_TYPE
I_comp[0] <= I_comp[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[1] <= I_comp[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[2] <= I_comp[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[3] <= I_comp[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[4] <= I_comp[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[5] <= I_comp[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[6] <= I_comp[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[7] <= I_comp[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[8] <= I_comp[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[9] <= I_comp[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[10] <= I_comp[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[11] <= I_comp[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[12] <= I_comp[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[13] <= I_comp[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[14] <= I_comp[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I_comp[15] <= I_comp[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[0] <= Q_comp[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[1] <= Q_comp[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[2] <= Q_comp[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[3] <= Q_comp[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[4] <= Q_comp[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[5] <= Q_comp[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[6] <= Q_comp[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[7] <= Q_comp[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[8] <= Q_comp[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[9] <= Q_comp[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[10] <= Q_comp[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[11] <= Q_comp[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[12] <= Q_comp[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[13] <= Q_comp[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[14] <= Q_comp[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q_comp[15] <= Q_comp[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


